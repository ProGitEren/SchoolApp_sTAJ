@using SchoolApplication.Models.ViewModels
@model GradeIndexViewModel


@{
    ViewData["Title"] = "Grades";
}

<partial name="_Notification" />

<div style="display: flex; justify-content: space-between; align-items: center;">
    <h3 class="text-warning">Grades</h3>
    <h4 style="color:darkgray"> Lecture: @Model.lecturetype </h4>

    
</div>

<div style="max-height:700px;overflow:scroll;">
    <table class="table table-bordered table-striped table-dark">
        <thead class="thead-dark">
            <tr>
                <th class="text-primary">Name</th>
                <th class="text-primary">Department</th>
                <th class="text-primary">Email</th>
                
                <th class="text-primary">Grades</th>
                <th class="text-primary"></th>
            </tr>
        </thead>



        <tbody>
            @foreach (var student in Model.students)
            {

                <tr>
                    <td class="border-left text-info">@student.Name</td>
                    <td class="border-left text-info">@student.Department</td>
                    <td class="border-left text-info">@student.Email</td>
                    
                    <td class="border-left text-info">
                        @if (student.GetGrades().Keys.Contains(Model.lecturetype))
                        {
                            @student.GetGrades()[Model.lecturetype]
                        }
                        else{ <span> Grade is not initialized or this lectures key does not exist.</span>}
                    </td>
                    <td>
                        <div class="w-75 btn-group" role="group">
                            <a style="text-decoration:none;margin-right:15px; color:hsl(45, 47%, 57%); " asp-controller="Grade" asp-action="Edit" asp-route-id="@student.Id"><i class="bi bi-pen"></i>Edit</a>
                           
                        </div>
                    </td>

                </tr>

            }
        </tbody>
    </table>
</div>